{"version":3,"sources":["webpack:///./src/views/Activities.vue?e20c","webpack:///../../../src/mixins/translatable/index.ts","webpack:///../../../src/components/VParallax/VParallax.ts","webpack:///./src/views/Activities.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","name","props","height","Number","data","elOffsetTop","parallax","parallaxDist","percentScrolled","scrollTop","windowHeight","windowBottom","computed","imgHeight","beforeDestroy","window","methods","calcDimensions","offset","$el","listeners","objHeight","Error","translate","parseInt","Math","baseMixins","mixins","alt","type","default","String","src","srcset","isBooted","styles","display","opacity","transform","mounted","init","img","$refs","imgData","staticClass","style","ref","container","h","content","$slots","on","$listeners","script","component","VContainer","VParallax"],"mappings":"4IAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,cAAc,CAACE,MAAM,CAAC,MAAQ,KAAK,CAACF,EAAG,aAAa,CAACE,MAAM,CAAC,IAAM,wEAAwE,IACzOC,EAAkB,G,+ECCP,sBAAW,CACxBC,KADwB,eAGxBC,MAAO,CACLC,OAAQC,QAGVC,KAAM,iBAAO,CACXC,YADW,EAEXC,SAFW,EAGXC,aAHW,EAIXC,gBAJW,EAKXC,UALW,EAMXC,aANW,EAOXC,aAAc,IAGhBC,SAAU,CACRC,UADQ,WAEN,OAAOpB,KAAP,cAIJqB,cAvBwB,WAwBtBC,OAAA,6BAAqCtB,KAArC,cACAsB,OAAA,6BAAqCtB,KAArC,eAGFuB,QAAS,CACPC,eADO,WAEL,IAAMC,EAASzB,KAAK0B,IAApB,wBAEA1B,KAAA,UAAiBsB,OAAjB,YACAtB,KAAA,aAAoBA,KAAKoB,UAAYpB,KAArC,OACAA,KAAA,YAAmByB,EAAA,IAAazB,KAAhC,UACAA,KAAA,aAAoBsB,OAApB,YACAtB,KAAA,aAAoBA,KAAKgB,UAAYhB,KAArC,cAEF2B,UAVO,WAWLL,OAAA,0BAAkCtB,KAAlC,cACAsB,OAAA,0BAAkCtB,KAAlC,eAGF4B,UAfO,WAgBL,MAAM,IAAIC,MAAV,sBAEFC,UAlBO,WAmBL9B,KAAA,iBAEAA,KAAA,iBACGA,KAAKkB,aAAelB,KAArB,cACC+B,SAAS/B,KAAT,QAAwBA,KAF3B,cAKAA,KAAA,SAAgBgC,KAAA,MAAWhC,KAAKc,aAAed,KAA/C,qB,YC9CAiC,EAAa,OAAAC,EAAA,MAAnB,GAUe,EAAAD,EAAA,gBAAoC,CACjD1B,KADiD,aAGjDC,MAAO,CACL2B,IAAK,CACHC,KADG,OAEHC,QAAS,IAEX5B,OAAQ,CACN2B,KAAM,CAACE,OADD,QAEND,QAAS,KAEXE,IATK,OAULC,OAAQF,QAGV3B,KAAM,iBAAO,CACX8B,UAAU,IAGZtB,SAAU,CACRuB,OADQ,WAEN,MAAO,CACLC,QADK,QAELC,QAAS5C,KAAKyC,SAAW,EAFpB,EAGLI,UAAW,mBAAF,OAAqB7C,KAAKa,SAA1B,UAKfiC,QA9BiD,WA+B/C9C,KAAA,QAGFuB,QAAS,CACPwB,KADO,WACH,WACIC,EAAMhD,KAAKiD,MAAjB,IAEA,IAEID,EAAJ,UACEhD,KAAA,YACAA,KAAA,aAEAgD,EAAA,yBAA6B,WAC3B,cACA,iBAFF,GAMFhD,KAAA,cAEF4B,UAlBO,WAmBL,OAAO5B,KAAKiD,MAAMD,IAAlB,gBAIJlD,OAzDiD,SAyD3C,GACJ,IAAMoD,EAAqB,CACzBC,YADyB,oBAEzBC,MAAOpD,KAFkB,OAGzBK,MAAO,CACLkC,IAAKvC,KADA,IAELwC,OAAQxC,KAFH,OAGLmC,IAAKnC,KAAKmC,KAEZkB,IAAK,OAGDC,EAAYC,EAAE,MAAO,CACzBJ,YAAa,+BACZ,CACDI,EAAE,MAHJ,KAMMC,EAAUD,EAAE,MAAO,CACvBJ,YAAa,uBACZnD,KAAKyD,OAFR,SAIA,OAAOF,EAAE,MAAO,CACdJ,YADc,aAEdC,MAAO,CACL3C,OAAQ,GAAF,OAAKT,KAAKS,OAAV,OAERiD,GAAI1D,KAAK2D,YACR,CAACL,EANJ,OClGAM,EAAS,GAKTC,EAAY,eACdD,EACA9D,EACAQ,GACA,EACA,KACA,KACA,MAIa,aAAAuD,EAAiB,QAMhC,IAAkBA,EAAW,CAACC,aAAA,KAAWC,UAAA","file":"js/activities.e8e5b540.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-parallax',{attrs:{\"src\":\"https://s0.wklcdn.com/image_17/532603/25627584/16359177Master.jpg\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'translatable',\n\n  props: {\n    height: Number,\n  },\n\n  data: () => ({\n    elOffsetTop: 0,\n    parallax: 0,\n    parallaxDist: 0,\n    percentScrolled: 0,\n    scrollTop: 0,\n    windowHeight: 0,\n    windowBottom: 0,\n  }),\n\n  computed: {\n    imgHeight (): number {\n      return this.objHeight()\n    },\n  },\n\n  beforeDestroy () {\n    window.removeEventListener('scroll', this.translate, false)\n    window.removeEventListener('resize', this.translate, false)\n  },\n\n  methods: {\n    calcDimensions () {\n      const offset = this.$el.getBoundingClientRect()\n\n      this.scrollTop = window.pageYOffset\n      this.parallaxDist = this.imgHeight - this.height\n      this.elOffsetTop = offset.top + this.scrollTop\n      this.windowHeight = window.innerHeight\n      this.windowBottom = this.scrollTop + this.windowHeight\n    },\n    listeners () {\n      window.addEventListener('scroll', this.translate, false)\n      window.addEventListener('resize', this.translate, false)\n    },\n    /** @abstract **/\n    objHeight (): number {\n      throw new Error('Not implemented !')\n    },\n    translate () {\n      this.calcDimensions()\n\n      this.percentScrolled = (\n        (this.windowBottom - this.elOffsetTop) /\n        (parseInt(this.height) + this.windowHeight)\n      )\n\n      this.parallax = Math.round(this.parallaxDist * this.percentScrolled)\n    },\n  },\n})\n","// Style\nimport './VParallax.sass'\n\n// Mixins\nimport Translatable from '../../mixins/translatable'\n\n// Types\nimport { VNode, VNodeData } from 'vue/types/vnode'\nimport mixins from '../../util/mixins'\n\nconst baseMixins = mixins(\n  Translatable\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    img: HTMLImageElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-parallax',\n\n  props: {\n    alt: {\n      type: String,\n      default: '',\n    },\n    height: {\n      type: [String, Number],\n      default: 500,\n    },\n    src: String,\n    srcset: String,\n  },\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  computed: {\n    styles (): object {\n      return {\n        display: 'block',\n        opacity: this.isBooted ? 1 : 0,\n        transform: `translate(-50%, ${this.parallax}px)`,\n      }\n    },\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init () {\n      const img = this.$refs.img\n\n      if (!img) return\n\n      if (img.complete) {\n        this.translate()\n        this.listeners()\n      } else {\n        img.addEventListener('load', () => {\n          this.translate()\n          this.listeners()\n        }, false)\n      }\n\n      this.isBooted = true\n    },\n    objHeight () {\n      return this.$refs.img.naturalHeight\n    },\n  },\n\n  render (h): VNode {\n    const imgData: VNodeData = {\n      staticClass: 'v-parallax__image',\n      style: this.styles,\n      attrs: {\n        src: this.src,\n        srcset: this.srcset,\n        alt: this.alt,\n      },\n      ref: 'img',\n    }\n\n    const container = h('div', {\n      staticClass: 'v-parallax__image-container',\n    }, [\n      h('img', imgData),\n    ])\n\n    const content = h('div', {\n      staticClass: 'v-parallax__content',\n    }, this.$slots.default)\n\n    return h('div', {\n      staticClass: 'v-parallax',\n      style: {\n        height: `${this.height}px`,\n      },\n      on: this.$listeners,\n    }, [container, content])\n  },\n})\n","import { render, staticRenderFns } from \"./Activities.vue?vue&type=template&id=926aa9c2&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VParallax } from 'vuetify/lib/components/VParallax';\ninstallComponents(component, {VContainer,VParallax})\n"],"sourceRoot":""}